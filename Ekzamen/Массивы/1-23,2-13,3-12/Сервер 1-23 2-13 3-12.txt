int GetNumClients();
bool CheckS();
void SendAll(HWND _hwnd);
SOCKET GetSocket(SOCKET sender, SOCKET& prev);


int GetNumClients(){
	LPSOCKET_INFORMATION temp = NULL;
	temp = SocketInfoList;
	int cnt = 0;
	while (temp){
		cnt++;
		temp = temp->Next;
	}
	return cnt;
}

bool CheckS(){
	LPSOCKET_INFORMATION temp = NULL;
	temp = SocketInfoList;
	int n = 0;
	while (temp){
		if (temp->BytesRECV == 0)
			n++;
		temp = temp->Next;
	}
	if (n == 0) return true;
	else return false;
}

SOCKET GetSocket(SOCKET sender,SOCKET& prev){
	LPSOCKET_INFORMATION temp = NULL;
	temp = SocketInfoList;
	int i = 0;
	while (temp){
		i++;
		if (temp->Socket != sender && temp->Socket != prev){
			prev = temp->Socket;
			break;
		}
			

		else
			temp = temp->Next;
	}
	return temp->Socket;
}

void SendAll(HWND _hwnd){
	LPSOCKET_INFORMATION temp = NULL;
	temp = SocketInfoList;
	while (temp){
		PostMessage(_hwnd, WM_SOCKET, temp->Socket, FD_WRITE);
			temp = temp->Next;

	}
}


case FD_ACCEPT: 

if (GetNumClients() < 3){

				   // Создание структуры с информацией о сокете
				   // и занесение ее в список
				   CreateSocketInformation(Accept, Str, pLB);
				   sprintf_s(Str, sizeof (Str),
					   "Socket number %d connected", Accept);
				   pLB->AddString(Str);
				   WSAAsyncSelect(Accept, hwnd, WM_SOCKET, FD_READ | FD_WRITE | FD_CLOSE);
					send(Accept,"1",2,0);
					}
					else {
						send(Accept,"0",2,0);
						closesocket(Accept);}
				break;


				
case FD_READ:

			// ЗДЕСЬ НЕТ ОПЕРАТОРА break, поскольку мы 
			   // получили данные. Продолжаем работу и
			   // начинаем их отправку клиенту.

			   if (GetNumClients() == 3 && CheckS()){
				   SendAll(hwnd);
			   }
			   break;

			   
case FD_WRITE:


				SocketInfo = GetSocketInformation(
										 wParam, Str, pLB);

			   if (SocketInfo->BytesRECV > 
									SocketInfo->BytesSEND)
			   {
				  SocketInfo->DataBuf.buf = 
						   SocketInfo ->Buffer + 
						   SocketInfo->BytesSEND;
				  SocketInfo->DataBuf.len = 
						   SocketInfo->BytesRECV - 
						   SocketInfo->BytesSEND;
						   
						   
				  SOCKET prev = NULL;
				  for (int i = 0; i < 2;i++)
				if (WSASend(GetSocket(SocketInfo->Socket,prev), 
							  &(SocketInfo->DataBuf), 1, 
							  &SendBytes, 0, NULL, NULL) == 
					  SOCKET_ERROR)