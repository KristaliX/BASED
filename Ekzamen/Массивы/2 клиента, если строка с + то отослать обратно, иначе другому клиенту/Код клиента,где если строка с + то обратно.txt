Обычный тср ip клиент 

#define DEFAULT_COUNT 1

В обработчик кнопки конект, в самый конец: 
if (connect(m_sClient, (struct sockaddr *)&server, sizeof(server)) == SOCKET_ERROR)
	{
		sprintf_s (Str, sizeof (Str), "connect() failed: %d", WSAGetLastError());
		m_ListBox.AddString(Str);
		return;
	}

	char	szBuffer[DEFAULT_BUFFER];
	int		ret;
	ret = recv(m_sClient, szBuffer, DEFAULT_BUFFER, 0);
		  if (ret == 0)	// Корректное завершение
				return;
		  else if (ret == SOCKET_ERROR)
				{
				  sprintf_s (Str, sizeof (Str), "recv() failed: %d", WSAGetLastError());
				  m_ListBox.AddString(Str);
				  return;
				}
		  szBuffer[ret] = '\0';
		  if (!strcmp(szBuffer, "Fail"))
		  {
			  m_ListBox.AddString("Try later...");
			  closesocket(m_sClient);
			  WSACleanup();
			  SetConnected(false);
		  }
		  else
		  {
			  m_ListBox.AddString("Connected");
			  SetConnected(true);
		  }


void CClientDlg::OnBnClickedSend():

// Отправка и прием данных 
	//
	for (i = 0; i < 2; i++)
	{
		if (i < 1){
			ret = send(m_sClient, szMessage, strlen(szMessage), 0);

			if (ret == 0)
				break;
			else if (ret == SOCKET_ERROR)
			{
				sprintf_s(Str, sizeof (Str), "send() failed: %d", WSAGetLastError());
				m_ListBox.AddString(Str);
				break;
			}

			sprintf_s(Str, sizeof (Str), "Send %d bytes\n", ret);
			m_ListBox.AddString(Str);
		}
